Bagusnya baca ini sambil split screen file TeleSuperNova di samping

Jadi ada 4 fungsi untuk teleport, 2 untuk menembak, 2 untuk mengecek kapan ngedetonate
public int teleportSerang(PlayerAction playerAction, int firedTeleport)
fungsi yang ini buat nembakin teleporter nyerang
awalnya mau kubuat void, tapi aku mikir gimana   
caranya kita mau ngedetonate teleporternya di
tick2 berikutnya jadi aku pikir buat bikin
atribut baru yang jadi kode yang nandain kalau 
lagi ada teleporter yang ditembakin atau nggak,
jadi sekarang fungsinya ngereturn int.
Nah, awalnya kodenya cuman angka2 biasa,
disimpen di atribut baru, kalau -1 artinya gaada
teleporter di luar, kalo ada kodenya angka 1 atau 2
kalau 1 artinya ada teleporter buat nyerang,
kalau 2 artinya ada telporter buat teleport, 
kode ini bakal dicek di bagian computeNextPlayerAction
setiap tick, makanya di bagian computeNextPlayerAction,
kutambahin conditional dulu di awal tapi masih 
kucomment soalnya belum rapi. 
Nah, masalah ngedeteksinya udah kelar, tapi, 
waktu aku bikin fungsi checkTeleportSerang, fungsi
buat ngecek apakah teleporternya mau didetonate 
sekarang atau nggak, aku kan mau ngecek mana yang 
teleporter kita atau bukan, karena di getGameObjects
kita gak bisa tahu mana teleporter kita atau bukan,
aku jadi cari tahu bagian apa yang ngebuat teleporter 
punya kita itu unik. Jawabannya heading, karena kayaknya 
kemungkinan kecil banget kalo ada teleporter lain 
yang sama headingnya. Nah, jadi sekarang aku pengen
nambahin ngereturn heading teleporter di fungsinya 
teleportSerang, karena java susah ngereturn tuple, 
jadi aku bikin headingnya sekalian jadi kodenya aja. 
Jadi kalo nggak ada teleporter kita di lapangan, 
kodenya bakal tetep -1, tapi kalo ada, 
kodenya bakal berisi sama heading kita. jadinya 
fungsi teleportSerang tetep ngereturn 1 integer 
yaitu heading teleporter kita. 
Nah, sekarang aku mau bikin fungsi teleport buat 
bertahan, karena fungsi detonate dan nembaknya
beda, jadi aku bikin teleportBertahan dan 
checkTeleportBertahan. Karena ada fungsi teleport 
baru ini, kita juga perlu kode buat ngebedain 
mana yang teleporter buat nyerang, mana yang buat
bertahan. Di sini kodenya tetep memerlukan heading
karena walaupun bertahan, kita tetep perlu ngelacak
posisi teleporter kita ada di mana sekarang. 
Karena kode heading biasa udah kita pakai buat 
jadi kodenya teleporter serang, jadi kita kudu
nyari kode baru yang beda dari itu dan tetep kita 
bisa ekstrak headingnya. Solusi yang kutemuin 
adalah nambahin 360 ke headingnya tadi. Kenapa? 
karena kalau heading biasa, batesnya cuman antara 
1-360, nggak bisa lebih atau kurang, jadi, kalau
kita nambahin 360 ke heading teleporter bertahan 
kita sebagai return value, itu bakal jadi kode yang
cocok karena nggak tabrakan sama kode teleporter 
serang dan kita bisa dengan gampang ngeekstrak 
heading awalnya dengan dikurangi 360 atau dimod 360. 
Nah, Karena Kalau kita bertahan, 
kita pengen nunggu beberapa tick dulu, 
saranmu kemaren 5, selain itu juga ngecek 
apakah di tick berikutnya dia bakal ngelewati 
border atau nggak, jadi kita nggak bisa pakai for 
atau loop biasa, karena kita tetep kudu gerak di 
antara tick dan nggak mesti juga kita bakal nunggu 
sampai 5 tick, kalau misal di tick kurang dari 5 
teleporternya udah keluar dari border, kita perlu
buat ngedetonate teleporternya sebelum dia ngelewati
batas. Nah, biar kita bisa tahu berapa tick yang 
tersisa buat ngedetonate teleporternya, 
jadinya kode heading yang buat defense tadi 
kutambahin nggak hanya 360 dari heading awalnya dia
tapi 6*360, 2160 dari heading awalnya, 
Kenapa jadi 6*360? Karena ada 5 tick (default) 
sebelum dia ditonate dan ditambah 360 buat
ngasih tahu kalau dia ini teleporter bertahan,
jadi, cara kerjanya nanti, di fungsi 
checkTeleportBertahan, di tiap tick, dia bakal ngecek
apakah headingnya udah kurang dari 720 atau belum, 
kalau masih > 720, artinya ini belum ticknya 
untuk detonate, nanti fungsi ini akan ngereturnnya
headingnya - 360, jadi tiap tick, nanti akan mengecil 
headingnya sampai dia < 720, btw, kenapa pakai 720? 
nggak 360? Karena 360 ke bawah udah dipakai buat 
kode teleporter serang. Lanjut, terus, 
di situ, dia juga bakal ngitung, 
apakah di tick selanjutnya teleporternya
bakal keluar border atau nggak, 
kalau di tick berikutnya prediksinya bakal keluar, 
kita bakal detonate sekarang, kalo nggak, lanjut ke 
defaultnya tadi. Nah, kalo headingnya udah < 720
berarti ini udah saatnya detonate. 
Udah gitu, sorry kalo panjang yak :)
Agak susah juga kalo diomongin, 
sisanya yang supernova sama kayak teleporter serang
cuman jarak toleransinya lebih besar. 